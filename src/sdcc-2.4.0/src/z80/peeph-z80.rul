/* Generated file, DO NOT Edit!  */
/* To Make changes to rules edit */
/* <port>/peeph.def instead.     */
"replace restart {\n"
"	ld	a,%1(%2)\n"
"	bit	%3,a\n"
"	jp	%4,%5\n"
"} by {\n"
"	bit	%3,%1(%2)\n"
"	jp	%4,%5\n"
"}\n"
"replace {\n"
"	ld	%1,%2\n"
"	ld	a,%2\n"
"} by {\n"
"	ld	%1,%2\n"
"	ld	a,%1\n"
"}\n"
"replace {\n"
"	ld	%1,a\n"
"	xor	a,a\n"
"	or	a,%1\n"
"	jp	z,%2\n"
"} by {\n"
"	ld	%1,a\n"
"	or	a,a\n"
"	jp	z,%2\n"
"}\n"
"replace {\n"
"	rlca\n"
"	ld	a,#0x00\n"
"	rla\n"
"} by {\n"
"	rlca\n"
"	and	a,#0x01\n"
"}\n"
"replace {\n"
"	ld	%3,a\n"
"	ld	l,%1\n"
"	ld	h,%2\n"
"	ld	l,(hl)\n"
"	ld	a,%3\n"
"} by {\n"
"	ld	%3,a\n"
"	ld	l,%1\n"
"	ld	h,%2\n"
"	ld	l,(hl)\n"
"} if notVolatile %3\n"
"\n"
";\n"
";--------------------------\n"
";\n"
"replace restart {\n"
"	pop	%1\n"
"	push	%1\n"
"	ld	%1,%2\n"
"} by {\n"
"	;	z80 removed redundant pop/push\n"
"	ld	%1,%2\n"
"}\n"
";\n"
";replace restart {\n"
"	ld	a,%1\n"
"	add	a,#0x01\n"
"	ld	l,a\n"
"} by {\n"
"	;	z80 improved usage of 'inc'\n"
"	ld	l,%1\n"
"	inc	l\n"
"	ld	a,l\n"
"}\n"
"\n"
"replace restart {\n"
"	ld	a,%1\n"
"	add	a,#0xFF\n"
"	ld	l,a\n"
"} by {\n"
"	;	z80 improved usage of 'dec'\n"
"	ld	l,%1\n"
"	dec	l\n"
"	ld	a,l\n"
"}\n"
"\n"
"replace restart {\n"
"	ld	l,a\n"
"	ld	c,%1\n"
"	ld	a,l\n"
"} by {\n"
"	ld	l,a\n"
"	ld	c,%1\n"
"}\n"
"\n"
"replace restart {\n"
"	ld	c,l\n"
"	ld	a,c\n"
"	and	a,#%1\n"
"	ld	c,a\n"
"	or	a,a\n"
"} by {\n"
"	;	z80 stream lining 'and' logic\n"
"	ld	a,#%1\n"
"	and	a,l\n"
"	ld	c,a\n"
"}\n"
"\n"
"replace restart {\n"
"	ld	a,c\n"
"	and	a,#%1\n"
"	ld	c,a\n"
"	or	a,a\n"
"} by {\n"
"	;	z80 stream lining 'and' logic\n"
"	ld	a,#%1\n"
"	and	a,c\n"
"	ld	c,a\n"
"}\n"
"\n"
"replace restart {\n"
"	ld	a,c\n"
"	or	a,#%1\n"
"	ld	c,a\n"
"} by {\n"
"	;	z80 stream lining 'or' logic\n"
"	ld	a,#%1\n"
"	or	a,c\n"
"	ld	c,a\n"
"}\n"
"\n"
"; I don't think this works. neg does a unary minus of A, not HL  -- EEP\n"
";\n"
";replace {\n"
";	ld	a,c\n"
";	sub	a,%1\n"
";	ld	l,a\n"
";	ld	a,b\n"
";	sbc	a,%2\n"
";	ld	h,a\n"
";} by {\n"
";	;	z80/z180 peephole byte pointer subtraction\n"
";	xor	a\n"
";	ld	h,%1\n"
";	ld	l,%2\n"
";	sbc	hl,bc\n"
";	neg\n"
";}\n"
"\n"
"replace {\n"
"%1:\n"
"	in0     a,(%2)\n"
"	and	a,#%3\n"
"	jp	z,%4\n"
"%5:\n"
"	jp	%6\n"
"%4:\n"
"	call	%7\n"
"	jp	%1\n"
"%6:\n"
"	ret\n"
"} by {\n"
"%1:\n"
"	in0     a,(%2)\n"
"	and	a,#%3\n"
"	jp	nz,%5\n"
"%4:\n"
"	call	%7\n"
"	jp	%1\n"
"%5:\n"
"%6:\n"
"	ret\n"
"}\n"
"\n"
"\n"
